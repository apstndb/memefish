--- graph_hints_traversal_hint.sql
GRAPH FinGraph
MATCH
  (p:Person {id: 1})-[:Owns]->(a:Account),                   -- path pattern 1
  @{JOIN_METHOD=HASH_JOIN, HASH_JOIN_BUILD_SIDE=BUILD_RIGHT} -- traversal hint
  (a:Account)-[e:Transfers]->(c:Account)                     -- path pattern 2
RETURN c.id
--- AST
&ast.GqlGraphQuery{
  GraphClause: &ast.GqlGraphClause{
    GqlGraph:             0,
    GqlPropertyGraphName: &ast.Ident{
      NamePos: 6,
      NameEnd: 14,
      Name:    "FinGraph",
    },
  },
  GqlMultiLinearQueryStatement: &ast.GqlMultiLinearQueryStatement{
    GqlLinearQueryStatements: []ast.GqlLinearQueryStatement{
      &ast.GqlSimpleLinearQueryStatement{
        PrimitiveQueryStatementList: []ast.GqlPrimitiveQueryStatement{
          &ast.GqlMatchStatement{
            Optional:     -1,
            Match:        15,
            MatchHint:    (*ast.Hint)(nil),
            PrefixOrMode: nil,
            GraphPattern: &ast.GqlGraphPattern{
              PathPatternList: []*ast.GqlTopLevelPathPattern{
                &ast.GqlTopLevelPathPattern{
                  PathSearchPrefixOrPathMode: nil,
                  PathPattern:                &ast.GqlPathPattern{
                    PathTermList: []*ast.GqlQuantifiablePathTerm{
                      &ast.GqlQuantifiablePathTerm{
                        Hint:     (*ast.Hint)(nil),
                        PathTerm: &ast.GqlNodePattern{
                          LParen:        23,
                          RParen:        40,
                          PatternFiller: &ast.GqlPatternFiller{
                            Hint:                 (*ast.Hint)(nil),
                            GraphPatternVariable: &ast.Ident{
                              NamePos: 24,
                              NameEnd: 25,
                              Name:    "p",
                            },
                            IsLabelCondition: &ast.GqlIsLabelCondition{
                              IsOrColon:       25,
                              LabelExpression: &ast.GqlLabelName{
                                IsPercent: false,
                                LabelName: &ast.Ident{
                                  NamePos: 26,
                                  NameEnd: 32,
                                  Name:    "Person",
                                },
                              },
                            },
                            Filter: &ast.GqlPropertyFilters{
                              LBrace:                 33,
                              PropertyFilterElemList: []*ast.GqlElementProperty{
                                &ast.GqlElementProperty{
                                  ElementPropertyName: &ast.Ident{
                                    NamePos: 34,
                                    NameEnd: 36,
                                    Name:    "id",
                                  },
                                  ElementPropertyValue: &ast.IntLiteral{
                                    ValuePos: 38,
                                    ValueEnd: 39,
                                    Base:     10,
                                    Value:    "1",
                                  },
                                },
                              },
                              RBrace: 39,
                            },
                          },
                        },
                        Quantifier: nil,
                      },
                      &ast.GqlQuantifiablePathTerm{
                        Hint:     (*ast.Hint)(nil),
                        PathTerm: &ast.GqlFullEdgeRight{
                          First:         41,
                          Last:          50,
                          PatternFiller: &ast.GqlPatternFiller{
                            Hint:                 (*ast.Hint)(nil),
                            GraphPatternVariable: (*ast.Ident)(nil),
                            IsLabelCondition:     &ast.GqlIsLabelCondition{
                              IsOrColon:       43,
                              LabelExpression: &ast.GqlLabelName{
                                IsPercent: false,
                                LabelName: &ast.Ident{
                                  NamePos: 44,
                                  NameEnd: 48,
                                  Name:    "Owns",
                                },
                              },
                            },
                            Filter: nil,
                          },
                        },
                        Quantifier: nil,
                      },
                      &ast.GqlQuantifiablePathTerm{
                        Hint:     (*ast.Hint)(nil),
                        PathTerm: &ast.GqlNodePattern{
                          LParen:        51,
                          RParen:        61,
                          PatternFiller: &ast.GqlPatternFiller{
                            Hint:                 (*ast.Hint)(nil),
                            GraphPatternVariable: &ast.Ident{
                              NamePos: 52,
                              NameEnd: 53,
                              Name:    "a",
                            },
                            IsLabelCondition: &ast.GqlIsLabelCondition{
                              IsOrColon:       53,
                              LabelExpression: &ast.GqlLabelName{
                                IsPercent: false,
                                LabelName: &ast.Ident{
                                  NamePos: 54,
                                  NameEnd: 61,
                                  Name:    "Account",
                                },
                              },
                            },
                            Filter: nil,
                          },
                        },
                        Quantifier: nil,
                      },
                    },
                  },
                },
                &ast.GqlTopLevelPathPattern{
                  PathSearchPrefixOrPathMode: nil,
                  PathPattern:                &ast.GqlPathPattern{
                    PathTermList: []*ast.GqlQuantifiablePathTerm{
                      &ast.GqlQuantifiablePathTerm{
                        Hint: &ast.Hint{
                          Atmark:  102,
                          Rbrace:  159,
                          Records: []*ast.HintRecord{
                            &ast.HintRecord{
                              Key: &ast.Ident{
                                NamePos: 104,
                                NameEnd: 115,
                                Name:    "JOIN_METHOD",
                              },
                              Value: &ast.Ident{
                                NamePos: 116,
                                NameEnd: 125,
                                Name:    "HASH_JOIN",
                              },
                            },
                            &ast.HintRecord{
                              Key: &ast.Ident{
                                NamePos: 127,
                                NameEnd: 147,
                                Name:    "HASH_JOIN_BUILD_SIDE",
                              },
                              Value: &ast.Ident{
                                NamePos: 148,
                                NameEnd: 159,
                                Name:    "BUILD_RIGHT",
                              },
                            },
                          },
                        },
                        PathTerm: &ast.GqlNodePattern{
                          LParen:        181,
                          RParen:        191,
                          PatternFiller: &ast.GqlPatternFiller{
                            Hint:                 (*ast.Hint)(nil),
                            GraphPatternVariable: &ast.Ident{
                              NamePos: 182,
                              NameEnd: 183,
                              Name:    "a",
                            },
                            IsLabelCondition: &ast.GqlIsLabelCondition{
                              IsOrColon:       183,
                              LabelExpression: &ast.GqlLabelName{
                                IsPercent: false,
                                LabelName: &ast.Ident{
                                  NamePos: 184,
                                  NameEnd: 191,
                                  Name:    "Account",
                                },
                              },
                            },
                            Filter: nil,
                          },
                        },
                        Quantifier: nil,
                      },
                      &ast.GqlQuantifiablePathTerm{
                        Hint:     (*ast.Hint)(nil),
                        PathTerm: &ast.GqlFullEdgeRight{
                          First:         192,
                          Last:          207,
                          PatternFiller: &ast.GqlPatternFiller{
                            Hint:                 (*ast.Hint)(nil),
                            GraphPatternVariable: &ast.Ident{
                              NamePos: 194,
                              NameEnd: 195,
                              Name:    "e",
                            },
                            IsLabelCondition: &ast.GqlIsLabelCondition{
                              IsOrColon:       195,
                              LabelExpression: &ast.GqlLabelName{
                                IsPercent: false,
                                LabelName: &ast.Ident{
                                  NamePos: 196,
                                  NameEnd: 205,
                                  Name:    "Transfers",
                                },
                              },
                            },
                            Filter: nil,
                          },
                        },
                        Quantifier: nil,
                      },
                      &ast.GqlQuantifiablePathTerm{
                        Hint:     (*ast.Hint)(nil),
                        PathTerm: &ast.GqlNodePattern{
                          LParen:        208,
                          RParen:        218,
                          PatternFiller: &ast.GqlPatternFiller{
                            Hint:                 (*ast.Hint)(nil),
                            GraphPatternVariable: &ast.Ident{
                              NamePos: 209,
                              NameEnd: 210,
                              Name:    "c",
                            },
                            IsLabelCondition: &ast.GqlIsLabelCondition{
                              IsOrColon:       210,
                              LabelExpression: &ast.GqlLabelName{
                                IsPercent: false,
                                LabelName: &ast.Ident{
                                  NamePos: 211,
                                  NameEnd: 218,
                                  Name:    "Account",
                                },
                              },
                            },
                            Filter: nil,
                          },
                        },
                        Quantifier: nil,
                      },
                    },
                  },
                },
              },
              WhereClause: (*ast.Where)(nil),
            },
          },
          &ast.GqlReturnStatement{
            AllOrDistinct:  0,
            Return:         258,
            ReturnItemList: []ast.GqlReturnItem{
              &ast.ExprSelectItem{
                Expr: &ast.Path{
                  Idents: []*ast.Ident{
                    &ast.Ident{
                      NamePos: 265,
                      NameEnd: 266,
                      Name:    "c",
                    },
                    &ast.Ident{
                      NamePos: 267,
                      NameEnd: 269,
                      Name:    "id",
                    },
                  },
                },
              },
            },
            GroupByClause:        (*ast.GroupBy)(nil),
            OrderByClause:        (*ast.OrderBy)(nil),
            LimitAndOffsetClause: nil,
          },
        },
      },
    },
  },
}

--- SQL
GRAPH FinGraph
MATCH (p:Person {id: 1})-[:Owns]->(a:Account), @{JOIN_METHOD=HASH_JOIN, HASH_JOIN_BUILD_SIDE=BUILD_RIGHT}(a:Account)-[e:Transfers]->(c:Account)
RETURN c.id
