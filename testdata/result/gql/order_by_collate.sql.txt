--- order_by_collate.sql
GRAPH FinGraph MATCH (a:Person) ORDER BY a.name COLLATE 'und:ci' RETURN a.name
--- AST
&ast.GqlGraphQuery{
  GraphClause: &ast.GqlGraphClause{
    Graph:             0,
    PropertyGraphName: &ast.Ident{
      NamePos: 6,
      NameEnd: 14,
      Name:    "FinGraph",
    },
  },
  MultiLinearQueryStatement: &ast.GqlMultiLinearQueryStatement{
    LinearQueryStatementList: []ast.GqlLinearQueryStatement{
      &ast.GqlSimpleLinearQueryStatement{
        PrimitiveQueryStatementList: []ast.GqlPrimitiveQueryStatement{
          &ast.GqlMatchStatement{
            Optional:     -1,
            Match:        15,
            MatchHint:    (*ast.Hint)(nil),
            PrefixOrMode: nil,
            GraphPattern: &ast.GqlGraphPattern{
              PathPatternList: []*ast.GqlTopLevelPathPattern{
                &ast.GqlTopLevelPathPattern{
                  PathSearchPrefixOrPathMode: nil,
                  PathPattern:                &ast.GqlPathPattern{
                    PathTermList: []*ast.GqlQuantifiablePathTerm{
                      &ast.GqlQuantifiablePathTerm{
                        Hint:     (*ast.Hint)(nil),
                        PathTerm: &ast.GqlNodePattern{
                          LParen:        21,
                          RParen:        30,
                          PatternFiller: &ast.GqlPatternFiller{
                            Hint:                 (*ast.Hint)(nil),
                            GraphPatternVariable: &ast.Ident{
                              NamePos: 22,
                              NameEnd: 23,
                              Name:    "a",
                            },
                            IsLabelCondition: &ast.GqlIsLabelCondition{
                              IsOrColon:       23,
                              LabelExpression: &ast.GqlLabelName{
                                StartPos:  24,
                                IsPercent: false,
                                LabelName: &ast.Ident{
                                  NamePos: 24,
                                  NameEnd: 30,
                                  Name:    "Person",
                                },
                              },
                            },
                            Filter: nil,
                          },
                        },
                        Quantifier: nil,
                      },
                    },
                  },
                },
              },
              WhereClause: (*ast.Where)(nil),
            },
          },
          &ast.GqlOrderByStatement{
            Order:                    32,
            OrderBySpecificationList: []*ast.GqlOrderBySpecification{
              &ast.GqlOrderBySpecification{
                Expr: &ast.Path{
                  Idents: []*ast.Ident{
                    &ast.Ident{
                      NamePos: 41,
                      NameEnd: 42,
                      Name:    "a",
                    },
                    &ast.Ident{
                      NamePos: 43,
                      NameEnd: 47,
                      Name:    "name",
                    },
                  },
                },
                CollationSpecification: &ast.GqlCollationSpecification{
                  Collate:       48,
                  Specification: &ast.StringLiteral{
                    ValuePos: 56,
                    ValueEnd: 64,
                    Value:    "und:ci",
                  },
                },
                DirectionPos: -1,
                Direction:    "",
              },
            },
          },
          &ast.GqlReturnStatement{
            Return:         65,
            AllOrDistinct:  0,
            ReturnItemList: []ast.GqlReturnItem{
              &ast.ExprSelectItem{
                Expr: &ast.Path{
                  Idents: []*ast.Ident{
                    &ast.Ident{
                      NamePos: 72,
                      NameEnd: 73,
                      Name:    "a",
                    },
                    &ast.Ident{
                      NamePos: 74,
                      NameEnd: 78,
                      Name:    "name",
                    },
                  },
                },
              },
            },
            GroupByClause:        (*ast.GroupBy)(nil),
            OrderByClause:        (*ast.OrderBy)(nil),
            LimitAndOffsetClause: nil,
          },
        },
      },
    },
  },
}

--- SQL
GRAPH FinGraph
MATCH (a:Person)
ORDER BY a.name COLLATE "und:ci"
RETURN a.name
