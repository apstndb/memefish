--- match_where_is_source_of_return.sql
GRAPH FinGraph
MATCH (a:Account)-[transfer:Transfers]-(b:Account)
WHERE a IS SOURCE of transfer
RETURN a.id AS a_id, b.id AS b_id
--- AST
&ast.GqlGraphQuery{
  GraphClause: &ast.GqlGraphClause{
    GqlGraph:             0,
    GqlPropertyGraphName: &ast.Ident{
      NamePos: 6,
      NameEnd: 14,
      Name:    "FinGraph",
    },
  },
  GqlMultiLinearQueryStatement: &ast.GqlMultiLinearQueryStatement{
    GqlLinearQueryStatements: []ast.GqlLinearQueryStatement{
      &ast.GqlSimpleLinearQueryStatement{
        PrimitiveQueryStatementList: []ast.GqlPrimitiveQueryStatement{
          &ast.GqlMatchStatement{
            Optional:     -1,
            Match:        15,
            MatchHint:    (*ast.Hint)(nil),
            PrefixOrMode: nil,
            GraphPattern: &ast.GqlGraphPattern{
              PathPatternList: []*ast.GqlTopLevelPathPattern{
                &ast.GqlTopLevelPathPattern{
                  PathSearchPrefixOrPathMode: nil,
                  PathPattern:                &ast.GqlPathPattern{
                    PathTermList: []*ast.GqlQuantifiablePathTerm{
                      &ast.GqlQuantifiablePathTerm{
                        Hint:     (*ast.Hint)(nil),
                        PathTerm: &ast.GqlNodePattern{
                          LParen:        21,
                          RParen:        31,
                          PatternFiller: &ast.GqlPatternFiller{
                            Hint:                 (*ast.Hint)(nil),
                            GraphPatternVariable: &ast.Ident{
                              NamePos: 22,
                              NameEnd: 23,
                              Name:    "a",
                            },
                            IsLabelCondition: &ast.GqlIsLabelCondition{
                              IsOrColon:       23,
                              LabelExpression: &ast.GqlLabelName{
                                IsPercent: false,
                                LabelName: &ast.Ident{
                                  NamePos: 24,
                                  NameEnd: 31,
                                  Name:    "Account",
                                },
                              },
                            },
                            Filter: nil,
                          },
                        },
                        Quantifier: nil,
                      },
                      &ast.GqlQuantifiablePathTerm{
                        Hint:     (*ast.Hint)(nil),
                        PathTerm: &ast.GqlFullEdgeAny{
                          First:         32,
                          Last:          53,
                          PatternFiller: &ast.GqlPatternFiller{
                            Hint:                 (*ast.Hint)(nil),
                            GraphPatternVariable: &ast.Ident{
                              NamePos: 34,
                              NameEnd: 42,
                              Name:    "transfer",
                            },
                            IsLabelCondition: &ast.GqlIsLabelCondition{
                              IsOrColon:       42,
                              LabelExpression: &ast.GqlLabelName{
                                IsPercent: false,
                                LabelName: &ast.Ident{
                                  NamePos: 43,
                                  NameEnd: 52,
                                  Name:    "Transfers",
                                },
                              },
                            },
                            Filter: nil,
                          },
                        },
                        Quantifier: nil,
                      },
                      &ast.GqlQuantifiablePathTerm{
                        Hint:     (*ast.Hint)(nil),
                        PathTerm: &ast.GqlNodePattern{
                          LParen:        54,
                          RParen:        64,
                          PatternFiller: &ast.GqlPatternFiller{
                            Hint:                 (*ast.Hint)(nil),
                            GraphPatternVariable: &ast.Ident{
                              NamePos: 55,
                              NameEnd: 56,
                              Name:    "b",
                            },
                            IsLabelCondition: &ast.GqlIsLabelCondition{
                              IsOrColon:       56,
                              LabelExpression: &ast.GqlLabelName{
                                IsPercent: false,
                                LabelName: &ast.Ident{
                                  NamePos: 57,
                                  NameEnd: 64,
                                  Name:    "Account",
                                },
                              },
                            },
                            Filter: nil,
                          },
                        },
                        Quantifier: nil,
                      },
                    },
                  },
                },
              },
              WhereClause: &ast.Where{
                Where: 66,
                Expr:  &ast.IsSourceExpr{
                  Node: &ast.Ident{
                    NamePos: 72,
                    NameEnd: 73,
                    Name:    "a",
                  },
                  Edge: &ast.Ident{
                    NamePos: 87,
                    NameEnd: 95,
                    Name:    "transfer",
                  },
                  Not: false,
                },
              },
            },
          },
          &ast.GqlReturnStatement{
            AllOrDistinct:  0,
            Return:         96,
            ReturnItemList: []ast.GqlReturnItem{
              &ast.Alias{
                Expr: &ast.Path{
                  Idents: []*ast.Ident{
                    &ast.Ident{
                      NamePos: 103,
                      NameEnd: 104,
                      Name:    "a",
                    },
                    &ast.Ident{
                      NamePos: 105,
                      NameEnd: 107,
                      Name:    "id",
                    },
                  },
                },
                As: &ast.AsAlias{
                  As:    -1,
                  Alias: &ast.Ident{
                    NamePos: 111,
                    NameEnd: 115,
                    Name:    "a_id",
                  },
                },
              },
              &ast.Alias{
                Expr: &ast.Path{
                  Idents: []*ast.Ident{
                    &ast.Ident{
                      NamePos: 117,
                      NameEnd: 118,
                      Name:    "b",
                    },
                    &ast.Ident{
                      NamePos: 119,
                      NameEnd: 121,
                      Name:    "id",
                    },
                  },
                },
                As: &ast.AsAlias{
                  As:    -1,
                  Alias: &ast.Ident{
                    NamePos: 125,
                    NameEnd: 129,
                    Name:    "b_id",
                  },
                },
              },
            },
            GroupByClause:        (*ast.GroupBy)(nil),
            OrderByClause:        (*ast.OrderBy)(nil),
            LimitAndOffsetClause: nil,
          },
        },
      },
    },
  },
}

--- SQL
GRAPH FinGraph
MATCH (a:Account)-[transfer:Transfers]-(b:Account) WHERE a IS SOURCE OF transfer
RETURN a.id AS a_id, b.id AS b_id
