--- filter_where.sql
GRAPH FinGraph
MATCH (p:Person)-[o:Owns]->(a:Account)
FILTER WHERE p.birthday < '1990-01-10'
RETURN p.name
--- AST
&ast.GqlGraphQuery{
  GraphClause: &ast.GqlGraphClause{
    GqlGraph:             0,
    GqlPropertyGraphName: &ast.Ident{
      NamePos: 6,
      NameEnd: 14,
      Name:    "FinGraph",
    },
  },
  GqlMultiLinearQueryStatement: &ast.GqlMultiLinearQueryStatement{
    GqlLinearQueryStatements: []ast.GqlLinearQueryStatement{
      &ast.GqlSimpleLinearQueryStatement{
        PrimitiveQueryStatementList: []ast.GqlPrimitiveQueryStatement{
          &ast.GqlMatchStatement{
            Optional:     -1,
            Match:        15,
            MatchHint:    (*ast.Hint)(nil),
            PrefixOrMode: nil,
            GraphPattern: &ast.GqlGraphPattern{
              PathPatternList: []*ast.GqlTopLevelPathPattern{
                &ast.GqlTopLevelPathPattern{
                  PathSearchPrefixOrPathMode: nil,
                  PathPattern:                &ast.GqlPathPattern{
                    PathTermList: []*ast.GqlQuantifiablePathTerm{
                      &ast.GqlQuantifiablePathTerm{
                        Hint:     (*ast.Hint)(nil),
                        PathTerm: &ast.GqlNodePattern{
                          LParen:        21,
                          RParen:        30,
                          PatternFilter: &ast.GqlPatternFilter{
                            Hint:                 (*ast.Hint)(nil),
                            GraphPatternVariable: &ast.Ident{
                              NamePos: 22,
                              NameEnd: 23,
                              Name:    "p",
                            },
                            IsLabelCondition: &ast.GqlIsLabelCondition{
                              IsOrColon:       23,
                              LabelExpression: &ast.GqlLabelName{
                                IsPercent: false,
                                LabelName: &ast.Ident{
                                  NamePos: 24,
                                  NameEnd: 30,
                                  Name:    "Person",
                                },
                              },
                            },
                            Filter: nil,
                          },
                        },
                        Quantifier: nil,
                      },
                      &ast.GqlQuantifiablePathTerm{
                        Hint:     (*ast.Hint)(nil),
                        PathTerm: &ast.GqlFullEdgeRight{
                          First:         31,
                          Last:          41,
                          PatternFilter: &ast.GqlPatternFilter{
                            Hint:                 (*ast.Hint)(nil),
                            GraphPatternVariable: &ast.Ident{
                              NamePos: 33,
                              NameEnd: 34,
                              Name:    "o",
                            },
                            IsLabelCondition: &ast.GqlIsLabelCondition{
                              IsOrColon:       34,
                              LabelExpression: &ast.GqlLabelName{
                                IsPercent: false,
                                LabelName: &ast.Ident{
                                  NamePos: 35,
                                  NameEnd: 39,
                                  Name:    "Owns",
                                },
                              },
                            },
                            Filter: nil,
                          },
                        },
                        Quantifier: nil,
                      },
                      &ast.GqlQuantifiablePathTerm{
                        Hint:     (*ast.Hint)(nil),
                        PathTerm: &ast.GqlNodePattern{
                          LParen:        42,
                          RParen:        52,
                          PatternFilter: &ast.GqlPatternFilter{
                            Hint:                 (*ast.Hint)(nil),
                            GraphPatternVariable: &ast.Ident{
                              NamePos: 43,
                              NameEnd: 44,
                              Name:    "a",
                            },
                            IsLabelCondition: &ast.GqlIsLabelCondition{
                              IsOrColon:       44,
                              LabelExpression: &ast.GqlLabelName{
                                IsPercent: false,
                                LabelName: &ast.Ident{
                                  NamePos: 45,
                                  NameEnd: 52,
                                  Name:    "Account",
                                },
                              },
                            },
                            Filter: nil,
                          },
                        },
                        Quantifier: nil,
                      },
                    },
                  },
                },
              },
              WhereClause: (*ast.Where)(nil),
            },
          },
          &ast.GqlFilterStatement{
            Filter: 54,
            Where:  61,
            Expr:   &ast.BinaryExpr{
              Op:   "<",
              Left: &ast.Path{
                Idents: []*ast.Ident{
                  &ast.Ident{
                    NamePos: 67,
                    NameEnd: 68,
                    Name:    "p",
                  },
                  &ast.Ident{
                    NamePos: 69,
                    NameEnd: 77,
                    Name:    "birthday",
                  },
                },
              },
              Right: &ast.StringLiteral{
                ValuePos: 80,
                ValueEnd: 92,
                Value:    "1990-01-10",
              },
            },
          },
          &ast.GqlReturnStatement{
            AllOrDistinct:  0,
            Return:         93,
            ReturnItemList: []ast.GqlReturnItem{
              &ast.ExprSelectItem{
                Expr: &ast.Path{
                  Idents: []*ast.Ident{
                    &ast.Ident{
                      NamePos: 100,
                      NameEnd: 101,
                      Name:    "p",
                    },
                    &ast.Ident{
                      NamePos: 102,
                      NameEnd: 106,
                      Name:    "name",
                    },
                  },
                },
              },
            },
            GroupByClause:        (*ast.GroupBy)(nil),
            OrderByClause:        (*ast.OrderBy)(nil),
            LimitAndOffsetClause: nil,
          },
        },
      },
    },
  },
}

--- SQL
GRAPH FinGraph
MATCH (p:Person)-[o:Owns]->(a:Account)
FILTER WHERE p.birthday < "1990-01-10"
RETURN p.name
